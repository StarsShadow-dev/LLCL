import "modules/std"
// import "modules/libc_bindings"

struct Rectangle {
	var width: Int32;
	var height: Int32;
}

impl Rectangle {
	function test(): Void {
		std::printLine("testing things in the test function");
		return;
	}
	// function area(self: Rectangle): Int32 {
	// 	return self.width * self.height;
	// }
}

function main(): Int8 {
	var rectangle: Rectangle;
	rectangle.width = 10;
	rectangle.height = 5;
	
	rectangle.test();
	
	return 0;
}

// function safeMalloc(size: Int64): Pointer {
// 	var pointer: Pointer = libc_bindings::malloc(size);
// 	// if (pointer == NULL) {
// 	// 	libc_bindings::printf("safeMalloc: malloc failed");
// 	// 	libc_bindings::abort();
// 	// }
// 	return pointer;
// }

// struct Point {
// 	var x: Int32;
// 	var y: Int32;
// 	var z: Int32;
// }

// struct Triangle {
// 	var p1: Point;
// 	var p2: Point;
// 	var p3: Point;
// }