function main(): Int8 {
	if (true) {
		return 0;
	}
	
	// return 1;
}

function safeMalloc(size: Int64): Pointer {
	var pointer: Pointer = malloc(size);
	// if (pointer == 0) {
	// 	printf("safeMalloc: malloc failed");
	// 	abort();
	// }
	return pointer;
}

struct Point {
	var x: Int32;
	var y: Int32;
	var z: Int32;
}

struct Triangle {
	var p1: Point;
	var p2: Point;
	var p3: Point;
}

function printLine(string: Pointer): Void {
	printf(string);
	putchar(10); // \n
	
	return;
}

function malloc(size: Int64): Pointer "declare ptr @malloc(i64 noundef) allocsize(0)"
function putchar(char: Int32): Int32 "declare i32 @putchar(i32 noundef)"
function printf(pointer: Pointer): Int32 "declare i32 @printf(ptr noundef, ...)"