// compSucceed

Color = enum {
	Red
	Green
	Blue
	Custom = struct (
		r: Number,
		g: Number,
		b: Number
	) {}
}

getCustomColorText = fn(rgb: Color.Custom): String {
	// @compAssert(rgb.r == 1)
	// @compAssert(rgb.g == 2)
	// @compAssert(rgb.b == 3)
	"a custom color!"
}

getColorText = fn(color: Color): String {
	match color {
		Red -> {
			"it is red"
		}
		Green -> {
			"it is green"
		}
		Blue -> {
			"it is blue"
		}
		Custom(rgb) -> {
			getCustomColorText(rgb)
		}
	}
}

@compAssert(getColorText(Color.Red) == "it is red")
@compAssert(getColorText(Color.Green) == "it is green")
@compAssert(getColorText(Color.Blue) == "it is blue")
@compAssert(getColorText(Color.Custom {
	r = 1
	g = 2
	b = 3
}) == "a custom color!")