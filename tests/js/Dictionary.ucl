// compOut
// "use strict";
// const symbols = {};
// symbols["test/js.ucl:128,20:Dictionary(tests/js/Dictionary.ucl:58,14:Vec2).test/js.ucl:130,15:new"] = () => {
// 	return (() => {
// 		var __uclstruct__ = {};
// 		return __uclstruct__;
// 	})();
// }
// symbols["test/js.ucl:128,20:Dictionary(tests/js/Dictionary.ucl:58,14:Vec2).test/js.ucl:136,15:set"] = (self, name, value) => {
// 	self[name] = value;
// }
// symbols["tests/js/Dictionary.ucl:62,14:new"] = (x, y) => {
// 	return (() => {
// 		var __uclstruct__ = {};
// 		__uclstruct__["x"] = x;
// 		__uclstruct__["y"] = y;
// 		return __uclstruct__;
// 	})();
// }
// symbols["test/js.ucl:128,20:Dictionary(tests/js/Dictionary.ucl:58,14:Vec2).test/js.ucl:133,15:get"] = (self, name) => {
// 	return self[name];
// }
// symbols["Dictionary_Vec2"] = () => {
// 	var dictionary = symbols["test/js.ucl:128,20:Dictionary(tests/js/Dictionary.ucl:58,14:Vec2).test/js.ucl:130,15:new"]();
// 	symbols["test/js.ucl:128,20:Dictionary(tests/js/Dictionary.ucl:58,14:Vec2).test/js.ucl:136,15:set"](dictionary, "a", (() => {
// 		var __uclstruct__ = {};
// 		__uclstruct__["x"] = 1;
// 		__uclstruct__["y"] = 2;
// 		return __uclstruct__;
// 	})());
// 	symbols["test/js.ucl:128,20:Dictionary(tests/js/Dictionary.ucl:58,14:Vec2).test/js.ucl:136,15:set"](dictionary, "b", symbols["tests/js/Dictionary.ucl:62,14:new"](22, 22));
// 	symbols["test/js.ucl:128,20:Dictionary(tests/js/Dictionary.ucl:58,14:Vec2).test/js.ucl:136,15:set"](dictionary, "b", symbols["tests/js/Dictionary.ucl:62,14:new"](333, 333));
// 	return symbols["test/js.ucl:128,20:Dictionary(tests/js/Dictionary.ucl:58,14:Vec2).test/js.ucl:133,15:get"](dictionary, "b");
// }
// symbols["test/js.ucl:128,20:Dictionary(builtin:Number).test/js.ucl:130,15:new"] = () => {
// 	return (() => {
// 		var __uclstruct__ = {};
// 		return __uclstruct__;
// 	})();
// }
// symbols["test/js.ucl:128,20:Dictionary(builtin:Number).test/js.ucl:136,15:set"] = (self, name, value) => {
// 	self[name] = value;
// }
// symbols["test/js.ucl:128,20:Dictionary(builtin:Number).test/js.ucl:133,15:get"] = (self, name) => {
// 	return self[name];
// }
// symbols["Dictionary_Number"] = () => {
// 	var dictionary = symbols["test/js.ucl:128,20:Dictionary(builtin:Number).test/js.ucl:130,15:new"]();
// 	symbols["test/js.ucl:128,20:Dictionary(builtin:Number).test/js.ucl:136,15:set"](dictionary, "a", 1);
// 	symbols["test/js.ucl:128,20:Dictionary(builtin:Number).test/js.ucl:136,15:set"](dictionary, "b", 2);
// 	return symbols["test/js.ucl:128,20:Dictionary(builtin:Number).test/js.ucl:133,15:get"](dictionary, "a");
// }
// 

const js = @import("./../../test/js.ucl");

const Vec2 = struct {
	field x: Number;
	field y: Number;
	
	const new = fn(x: Number, y: Number): Vec2 {
		ret Vec2 {
			.x = x;
			.y = y;
		};
	};
	
	const add = fn(v1: Vec2, v2: Vec2): Vec2 {
		ret Vec2.new(v1.x + v2.x, v1.y + v2.y);
	};
};

const Dictionary_Vec2 = fn(): Vec2 {
	var dictionary = js.Dictionary(Vec2).new();
	dictionary.set("a", Vec2 {
		.x = @opaque(1);
		.y = @opaque(2);
	});
	dictionary.set("b", Vec2.new(22, 22));
	dictionary.set("b", Vec2.new(333, 333));
	ret dictionary.get("b");
};
@export("Dictionary_Vec2", Dictionary_Vec2);
const Dictionary_Number = fn(): Number {
	var dictionary = js.Dictionary(Number).new();
	dictionary.set("a", 1);
	dictionary.set("b", 2);
	ret dictionary.get("a");
};
@export("Dictionary_Number", Dictionary_Number);